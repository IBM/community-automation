#! groovy

// Standard job properties
def jobProps = [
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '50')),
  disableResume(),
  durabilityHint("PERFORMANCE_OPTIMIZED"),
  [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false]
]

def paramsList = [
    string(name: 'wa_env', defaultValue: 'changeMyTargetEnv', description: 'Used to identify the job log only'),
    string(name: 'wa_target_host', defaultValue: 'changeMyTargetHost', description: 'FQDN of the dmgr host'),
    choice(name: 'wa_target_scope', choices: ['Cell','Node','Cluster','Server'], description: 'Traditional WebSphere scope'),
    string(name: 'wa_target_path', defaultValue: 'changeMyTargetPath', description: 'dmgr profile root, example: /opt/WAS/profiles/dmgr'),
    string(name: 'wsadmin_username', defaultValue: 'changeMe', description: 'Traditional WebSphere wsadmin username'),
    string(name: 'wsadmin_password', description: 'Traditional WebSphere wsadmin password'),
    string(name: 'wa_url', defaultValue: 'changeMe', description: 'WebSphere Automation instance URL'),
    string(name: 'api_key', description: 'WebSphere Automation instance api_key'),
    string(name: 'sslRef', defaultValue: 'CellDefaultSSLSettings', description: 'Traditional WebSphere sslRef'),
    choice(name: 'startServers', choices: ['false','true'], description: 'start servers?')
  ]
jobProps.push(parameters(paramsList))

properties(jobProps)

timestamps {
  ansiColor('xterm') {
    node ( 'kube_pod_slave' ) {

      //def scmVars = checkout scm
      checkout scm 
      stage('Stage 1') {
        buildName "${params.wa_env}.${BUILD_ID}"
        sh """
          set +x # hide sensitive info being echo'd to log
          export ANSIBLE_FORCE_COLOR=true
          ansible-playbook -i ${params.wa_target_host}, ./ansible/was-automation-register/was-automation-register.yml -e wa_target_host=${params.wa_target_host} -e wa_target_scope=${params.wa_target_scope} -e wa_target_path=${params.wa_target_path} -e wa_url=${params.wa_url} -e api_key=${params.api_key} -e wsadmin_username=${params.wsadmin_username} -e wsadmin_password=${params.wsadmin_password} -e sslRef=${params.sslRef} -e startServers=${params.startServers} -e waProductType='tWAS' 
        """.stripIndent()
      }
   }
  }
}

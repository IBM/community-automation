--- Change oauth2db to the name you want for the database
--- Connect to Derby, choose one connection option by uncomment 
--- if connecting to Derby as network server
--- CONNECT 'jdbc:derby://localhost:1527/oauth2db;create=true';

--- if connecting to embedded derby, you can change D:\oauth2db to location of database
--- CONNECT 'jdbc:derby:D:\oauth2db;create=true';

--- if creating tables in existing Derby database, remove the create=true parameter. 

connect 'jdbc:derby:/home/pent/usr/servers/cc/resources/derby/OAuthTestDB;create=true';

----- CREATE TABLES -----
CREATE TABLE OAuthDBSchema.OAUTH20CACHE
(
  LOOKUPKEY VARCHAR(256) NOT NULL,
  UNIQUEID VARCHAR(128) NOT NULL,
  COMPONENTID VARCHAR(256) NOT NULL,
  TYPE VARCHAR(64) NOT NULL,
  SUBTYPE VARCHAR(64),
  CREATEDAT BIGINT,
  LIFETIME INT,
  EXPIRES BIGINT,
  TOKENSTRING VARCHAR(2048) NOT NULL,
  CLIENTID VARCHAR(64) NOT NULL,
  USERNAME VARCHAR(64) NOT NULL,
  SCOPE VARCHAR(512) NOT NULL,
  REDIRECTURI VARCHAR(2048),
  STATEID VARCHAR(64) NOT NULL,
  EXTENDEDFIELDS CLOB NOT NULL DEFAULT '{}'
);

CREATE TABLE OAuthDBSchema.OAUTH20CLIENTCONFIG
(
  COMPONENTID VARCHAR(256) NOT NULL,
  CLIENTID VARCHAR(256) NOT NULL,
  CLIENTSECRET VARCHAR(256),
  DISPLAYNAME VARCHAR(256) NOT NULL,
  REDIRECTURI VARCHAR(2048),
  ENABLED INT,
  CLIENTMETADATA CLOB NOT NULL DEFAULT '{}'
);

CREATE TABLE OAuthDBSchema.OAUTH20CONSENTCACHE
(
  CLIENTID VARCHAR(256) NOT NULL,
  USERID VARCHAR(256),
  PROVIDERID VARCHAR(256) NOT NULL,
  SCOPE VARCHAR(1024) NOT NULL,
  EXPIRES BIGINT,
  EXTENDEDFIELDS CLOB NOT NULL DEFAULT '{}'
);

----- ADD CONSTRAINTS -----
ALTER TABLE OAuthDBSchema.OAUTH20CACHE
  ADD CONSTRAINT PK_LOOKUPKEY PRIMARY KEY (LOOKUPKEY);

ALTER TABLE OAuthDBSchema.OAUTH20CLIENTCONFIG
  ADD CONSTRAINT PK_COMPIDCLIENTID PRIMARY KEY (COMPONENTID,CLIENTID);

----- CREATE INDEXES -----
CREATE INDEX OAUTH20CACHE_EXPIRES ON OAUTHDBSCHEMA.OAUTH20CACHE (EXPIRES ASC);

DISCONNECT CURRENT;
exit;

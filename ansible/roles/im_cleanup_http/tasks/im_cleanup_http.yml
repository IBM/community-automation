---

- name: check if previous ihs installed
  stat:
    path: "{{ install_ihs_base }}/{{ http_dir }}bin/apachectl"
  register: isihs

- name: Stop any httpd proccess gracefully
  when: isihs.stat.exists == True
  block: 
  - name:  stop httpd
    ignore_errors: true
    shell: "{{ install_ihs_base }}/{{ http_dir }}/bin/apachectl stop"

  - name:  stop adminctl
    ignore_errors: true
    shell: "{{ install_ihs_base }}/{{ http_dir }}/bin/adminctl stop"

- name:  pkill httpd  ( linux )
  ignore_errors: true
  shell: "pkill httpd"
  register: killOutput
  failed_when: ( killOutput.rc not in [ 0, 1 ] )

- name: check if previous WCT installed
  stat:
    path: "{{ install_ihs_base }}/{{ wct_dir }}/bin/versionInfo.sh"
  register: iswct

- name: Uninstall WCT WAS90
  when: iswct.stat.exists == True
  block:
  - name:  uninstall wct WAS90
    shell: "{{ install_ihs_base }}/IM/eclipse/tools/imcl uninstall {{ im_wct_package[twas_release] }} {{ im_wct_java_package }} -installationDirectory {{ install_ihs_base }}/{{ wct_dir }}"
    register: uninstallWCTOutput
    when: twas_release == 'WAS90'

  - name: uninstallWCTOutput WAS90
    debug: 
      msg: "{{ uninstallWCTOutput.stdout_lines }}"
    failed_when: ( uninstallWCTOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS90'

  - name:  uninstall wct WAS855
    shell: "{{ install_ihs_base }}/IM/eclipse/tools/imcl uninstall {{ im_wct_package[twas_release] }} -installationDirectory {{ install_ihs_base }}/{{ wct_dir }}"
    register: uninstallWCTOutput
    when: twas_release == 'WAS855'

  - name: uninstallWCTOutput WAS855
    debug: 
      msg: "{{ uninstallWCTOutput.stdout_lines }}"
    failed_when: ( uninstallWCTOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS855'

- name: check if previous Plugin installed 
  stat:
    path: "{{ install_ihs_base }}/{{ plugin_dir }}/bin/versionInfo.sh"
  register: isplg

- name: Uninstall plugin 
  when: isplg.stat.exists == True
  block:
  - name:  uninstall plugin WAS90
    shell: "{{ install_ihs_base }}/IM/eclipse/tools/imcl uninstall {{ im_plugin_package[twas_release] }} {{ im_plugin_java_package }} -installationDirectory {{ install_ihs_base }}/{{ plugin_dir }}"
    register: uninstallPLGOutput
    when: twas_release == 'WAS90'

  - name: uninstallPLGOutput WAS90
    debug: 
      msg: "{{ uninstallPLGOutput.stdout_lines }}"
    failed_when: ( uninstallPLGOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS890'

  - name:  uninstall plugin WAS855
    shell: "{{ install_ihs_base }}/IM/eclipse/tools/imcl uninstall {{ im_plugin_package[twas_release] }} -installationDirectory {{ install_ihs_base }}/{{ plugin_dir }}"
    register: uninstallPLGOutput
    when: twas_release == 'WAS855'
    
  - name: uninstallPLGOutput WAS855
    debug: 
      msg: "{{ uninstallPLGOutput.stdout_lines }}"
    failed_when: ( uninstallPLGOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS855'

- name: check if previous IHS installed
  stat:
    path: "{{ install_ihs_base }}/{{ http_dir }}/bin/versionInfo.sh"
  register: isihs

- name: Uninstall IHS WAS90
  when: isihs.stat.exists == True
  block:
  - name:  uninstall http WAS90
    shell: "{{ install_ihs_base }}/IM/eclipse/tools/imcl uninstall {{ im_http_package[twas_release] }} {{ im_http_java_package }} -installationDirectory {{ install_ihs_base }}/{{ http_dir }}"
    register: uninstallIHSOutput
    failed_when: ( uninstallIHSOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS90'

  - name: uninstallIHSOutput WAS90
    debug: 
      msg: "{{ uninstallIHSOutput.stdout_lines }}"
    failed_when: ( uninstallIHSOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS90'

  - name:  uninstall http WAS855
    shell: "{{ install_ihs_base }}/IM/eclipse/tools/imcl uninstall {{ im_http_package[twas_release] }} -installationDirectory {{ install_ihs_base }}/{{ http_dir }}"
    register: uninstallIHSOutput
    failed_when: ( uninstallIHSOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS855'
    
  - name: uninstallIHSOutput WAS855
    debug: 
      msg: "{{ uninstallIHSOutput.stdout_lines }}"
    failed_when: ( uninstallIHSOutput.rc not in [ 0 ] )
    when: twas_release == 'WAS855'

- name: Remove previous http/plugin/wct/ dir 
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ install_ihs_base }}/{{ http_dir }}"
  - "{{ install_ihs_base }}/{{ plugin_dir }}"
  - "{{ install_ihs_base }}/{{ wct_dir }}"
  - "{{ install_ihs_base }}/im_http_plugin.xml"
  - "{{ install_ihs_base }}/wct_definition.xml"
  - "{{ install_ihs_base }}/https_conf"
  # - "{{ install_ihs_base }}/.ibm" # WCT seems to be the only IBM WAS product that uses this
 
 
---
- name: Start tWAS Managed Liberty servers
  when: profile_type == 'managed' or profile_type == 'default'
  block:
    - name: Retrieve signers
      ansible.builtin.shell: "{{ install_base }}/{{ twas_dir }}/profiles/{{ profile_name }}/bin/retrieveSigners{{ ext }} {{ cell_trust }} ClientDefaultTrustStore -autoAcceptBootstrapSigner -username {{ twas_username }} -password {{ twas_password }}"
      register: retrieveSignersOutput
      failed_when: ( retrieveSignersOutput.rc not in [ 0, 3 ] )
    - name: retrieveSignersOutput
      debug:
        msg: "{{ retrieveSignersOutput.stdout_lines }}"

    # bin/wsadmin.sh -username persona1 -password ppersona1 -c "AdminTask.listServers('[-serverType MANAGED_LIBERTY_SERVER -nodeName node1]')"
    # WASX7209I: Connected to process "dmgr" on node dmgr using SOAP connector;  The type of process is: DeploymentManager
    # u'lib11(cells/ndcell/nodes/node1/servers/lib11|server.xml)\nlib1(cells/ndcell/nodes/node1/servers/lib1|server.xml)'

    - name: Copy list_mls.jy
      ansible.builtin.template:
        src: list_mls.jy.j2
        dest: list_mls.jy
        mode: '0755'

    - name: List the ManagedLibertyServer
      ansible.builtin.shell: "{{ install_base }}/{{ twas_dir }}/profiles/{{ profile_name }}/bin/wsadmin{{ ext }} -username {{ twas_username }} -password {{ twas_password }} -lang jython -conntype none -f list_mls.jy"
      register: serverListOutput

    # - name: Debug serverListOutput
    #   ansible.builtin.debug:
    #     var: serverListOutput.stdout_lines

    - name: Find ManagedLibertyServers
      ansible.builtin.set_fact:
        mls: >-
          {{
            serverListOutput.stdout
            | regex_findall('servers/([^|]+)\|server\.xml')
          }}

    # - name: Debug found these ManagedLibertyServers
    #   ansible.builtin.debug:
    #     var: mls

    - name: Copy start_mls.jy
      ansible.builtin.template:
        src: start_mls.jy.j2
        dest: start_mls.jy
        mode: '0755'

    - name: Start ManagedLibertyServer
      ansible.builtin.shell: "{{ install_base }}/{{ twas_dir }}/profiles/{{ profile_name }}/bin/wsadmin{{ ext }} -username {{ twas_username }} -password {{ twas_password }} -lang jython -f start_mls.jy {{ item }}"
      register: startMlsOutput
      failed_when: ( startMlsOutput.rc not in [ 0,105 ] )
      with_items: '{{ mls }}'

    - name: ManagedLibertyServer start output
      ansible.builtin.debug:
        msg: "rc={{ item.rc }}"
      with_items: "{{ startMlsOutput.results }}"
      loop_control:
        label: "{{ item.stdout }}"
      failed_when:
      - '" Error " in item.stdout'

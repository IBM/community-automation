---

- name: check if java dir
  file:
    path: "{{ javaDir }}"
    state: directory
    owner: "{{ jmeterUser }}"

- name: find java exec
  shell: "find {{ javaDir }} -type f -name java"
  register: javaexec

- name: check if java
  stat:
   path: "{{ javaexec.stdout }}"
  register: isjava

- block:
  - name: retrieve Java
    get_url:
     url: "{{ javaArchive }}"
     dest: /tmp/java.tgz

  - name: Remove previous Java dir
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - "{{ javaDir }}"

  - name: check if java dir
    file:
      path: "{{ javaDir }}"
      state: directory
      owner: "{{ jmeterUser }}"

  - name: install Java
    unarchive:
     src: /tmp/java.tgz
     dest: "{{ javaDir }}"
     remote_src: yes
     owner: "{{ jmeterUser }}"

  - name: get version
    shell: "ls {{ javaDir }}"
    register: jVersion

  - name: remove temp java archive
    file:
     path: /tmp/java.tgz
     state: absent

  - name: java in system path
    lineinfile:
     create: yes
     path: "/etc/profile.d/jmeter_java.sh"
     state: present
     regexp: 'java'
     line: 'export PATH="{{ javaDir }}/{{ jVersion.stdout }}/bin:$PATH"'
     backup: yes
     mode: '0644'
    become: yes
  when: isjava.stat.exists == False or forceReplace|bool == True

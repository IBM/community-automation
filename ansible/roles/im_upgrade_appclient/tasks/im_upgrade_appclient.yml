---
- name: Upgrade Appclient using simple command
  tags: upgrade
  block:
  - name: Check if imcl installed as a prereq
    ansible.builtin.stat:
      path: "{{ install_base }}/IM/eclipse/tools/imcl"
    register: isimcl
    failed_when: isimcl.stat.exists == False

  - name:  Generate secureStorageFile.store
    ansible.builtin.shell: "{{ install_base }}/IM/eclipse/tools/imutilsc saveCredential -url https://rtpgsa.ibm.com -userName {{ gsa_user }} -userPassword '{{ gsa_pass }}' -secureStorageFile {{ install_base }}/IM/secureStorageFile.store"

  - name:  Upgrade WAS product
    ansible.builtin.shell: "{{ install_base }}/IM/eclipse/tools/imcl updateAll -installationDirectory {{ install_base }}/{{ app_dir }} -acceptLicense -secureStorageFile {{ install_base }}/IM/secureStorageFile.store -repositories 'https://rtpgsa.ibm.com/gsa/rtpgsa/projects/w/was.build/botp/{{ twas_release }}.IM/{{ twas_daily_or_test }}/{{ twas_im_driver }}.linux/linux/zipper/repository'"
    register: upgradeOutput

  - name: UpgradeOutput
    ansible.builtin.debug: 
      msg: "{{ upgradeOutput.stdout_lines }}"

  - name:  ListInstalledPackages
    ansible.builtin.shell: "{{ install_base }}/IM/eclipse/tools/imcl listInstalledPackages"
    register: packageOutput
  
  - name: packageOutput
    ansible.builtin.debug: 
      msg: "{{ packageOutput.stdout_lines }}"

- name: Versions
  tags: version
  block:
  - name: WAS version
    ansible.builtin.shell: "{{ install_base }}/{{ app_dir }}/bin/versionInfo.sh"
    register: wasVersionOutput

  - name: WasVersionOutput
    ansible.builtin.debug: 
      msg: "{{ wasVersionOutput.stdout_lines }}"

  - name: WasVersionOutput failed if version not found
    debug: 
      msg: "{{ wasVersionOutput.stdout_lines }}"
    failed_when: twas_im_driver not in wasVersionOutput.stdout

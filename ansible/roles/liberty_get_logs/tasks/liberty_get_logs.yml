---
- name: Any logs?
  ansible.builtin.stat:
    path: "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs"
  register: islogs

- name: Log archive logic
  when: islogs.stat.exists == True
  block: 
  - name: archive the liberty logs dir to fetch
    community.general.archive:
      path:
        - "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs/*" # needs * to allow the exclude_path to work
      dest: logs.zip
      exclude_path:
        - "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs/state"
        - "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs/tracedata"
      exclusion_patterns:
        - '*.zip'
        - '*.tar'
        - '*.gz'
      format: zip

  - name: Create local logs dir
    delegate_to: localhost
    ansible.builtin.file:
      path: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs/"
      state: directory

  - name: fetch the liberty log archive
    ansible.builtin.fetch:
      flat: true
      src: logs.zip
      dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/"

  - name: Remove temp logs.zip
    ansible.builtin.file:
      path: logs.zip
      state: absent

  - name: Extract the liberty log archive
    delegate_to: localhost
    ansible.builtin.unarchive:
      src: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs.zip"
      dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs/"
      remote_src: false

  - name: Remove logs.zip
    delegate_to: localhost
    ansible.builtin.file:
      path: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs.zip"
      state: absent

  - name: Log/error directory location
    ansible.builtin.debug:
      msg: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs/"

  - name: Verbose GC log processing
    when: verboseGC == True
    block: 
      # logic to create 1 verbosegc log file for input to IBM Verbose GC processing, if any gc files
      - name: Any verbosegc files?
        delegate_to: localhost
        ansible.builtin.shell: "ls -1 {{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs/verbosegc*"
        register: isvbgclogs
        ignore_errors: true

      - name: Concat any verbosegc files into 1
        delegate_to: localhost
        when: isvbgclogs.rc == 0
        ansible.builtin.shell: "cat {{ item }} >> {{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/logs/verbosegc.log"
        with_items: "{{ isvbgclogs.stdout_lines }}"

      - name: Remove original verbosegc files
        delegate_to: localhost
        ansible.builtin.file:
          path: "{{ item }}"
          state: absent
        with_items: "{{ isvbgclogs.stdout_lines }}"

---
- name: Any logs?
  ansible.builtin.stat:
    path: "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs"
  register: islogs

- name: Log archive logic
  when: islogs.stat.exists == True
  block: 
  - name: archive the liberty logs dir to fetch
    community.general.archive:
      path:
        - "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs/*" # needs * to allow the exclude_path to work
      dest: logs.zip
      exclude_path:
        - "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs/state"
        - "{{ wlp_usr_dir }}/servers/{{ wl_server }}/logs/tracedata"
      exclusion_patterns:
        - '*.zip'
        - '*.tar'
        - '*.gz'
      format: zip

  - name: fetch the liberty log archive
    ansible.builtin.fetch:
      src: logs.zip
      dest: "{{ logs_dir }}/{{ env_name }}"

  - name: Remove temp logs.zip
    ansible.builtin.file:
      path: logs.zip
      state: absent

  - name: Extract the liberty log archive
    delegate_to: localhost
    ansible.builtin.unarchive:
      src: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/logs.zip"
      dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}"
      remote_src: false

  - name: Remove logs.zip
    delegate_to: localhost
    ansible.builtin.file:
      path: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/logs.zip"
      state: absent

  - name: Log/error directory location
    ansible.builtin.debug:
      msg: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}"

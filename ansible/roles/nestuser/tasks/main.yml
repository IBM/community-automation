---

- name: Generate User Password file
  script: scripts/password_hasher.py {{ user_password }} > {{ user_passfile }}
  delegate_to: localhost

  #    - name: Ensure User is Absent
  #      user: name={{ user_username }} state=absent
  #      become: yes

- name: Ensure group exists
  become: yes
  group:
    name: "{{ user_username }}"
    state: present

# AIX /usr/bin/bash
# linux /bin/bash

- name: set /bin/ksh aix shell
  set_fact:
   user_shell: '/bin/ksh'
  when:
  - ansible_architecture == 'chrp'

- name: Ensure User is Present
  user: name={{ user_username }} group={{ user_username }} password={{ lookup('file', user_passfile) }} generate_ssh_key=yes shell={{ user_shell }} state=present
  become: yes

- name: remove temp pass hash file
  file:
   path: "{{ user_passfile }}"
   state: absent

- name: authorized_key
  authorized_key:
   user: "{{ user_username }}"
   state: present
   manage_dir: yes
   key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- block:
  - name: nest sudoers
    lineinfile:
     path: /etc/sudoers
     state: present
     regexp: "^{{ user_username }}"
     line: "{{ user_username }} ALL=(ALL) NOPASSWD: ALL"
     validate: 'visudo -cf %s'
     backup: yes
    become: yes
  
  - name: nest hard ulimit nofile
    lineinfile:
     path: /etc/security/limits.conf
     state: present
     regexp: "{{ user_username }} hard"
     line: "{{ user_username }} hard nofile 20000"
     backup: yes
    become: yes
  
  - name: nest soft ulimit nofile
    lineinfile:
     path: /etc/security/limits.conf
     state: present
     regexp: "{{ user_username }} soft"
     line: "{{ user_username }} soft nofile 20000"
     backup: yes
    become: yes
  when:
  - ansible_architecture == 'Linux'

- name: nest ulimit nofile
  lineinfile:
   path: /etc/security/limits
   state: present
   regexp: 'nofiles = 2000'
   line: 'nofiles = 20000'
   backup: yes
  become: yes
  when:
  - ansible_architecture == 'chrp'
 
- name: opt directory owner
  file:
   path: '{{ item }}'
   state: directory
   recurse: yes
   owner: "{{ user_username }}"
   group: "{{ user_username }}"
  with_items:
   - '/opt'
  become: yes

---

- name: Ensure group exists
  become: true
  ansible.builtin.group:
    name: "{{ user_username }}"
    gid: "{{ group_id }}"
    state: present

# AIX /usr/bin/bash
# linux /bin/bash

- name: Set /bin/ksh aix shell
  ansible.builtin.set_fact:
    user_shell: '/bin/ksh'
  when:
    - ansible_architecture == 'chrp'

- name: Ensure User is Present
  become: true
  ansible.builtin.user:
    name: '{{ user_username }}'
    uid: '{{ user_id }}'
    group: '{{ user_username }}'
    password: "{{ user_password | password_hash('sha512') }}"
    generate_ssh_key: true
    shell: '{{ user_shell }}'
    state: present

- name: Authorized_key
  ansible.builtin.authorized_key:
    user: "{{ user_username }}"
    state: present
    manage_dir: true
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: Is sudo installed?
  ansible.builtin.stat:
    path: "/etc/sudoers"
  register: issudoers

- name: Nest sudoers
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "^{{ user_username }}"
    line: "{{ user_username }} ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'
    backup: true
  become: true
  when: issudoers.stat.exists

- block:
    - name: Nest hard ulimit nofile
      ansible.builtin.lineinfile:
        path: /etc/security/limits.conf
        state: present
        regexp: "{{ user_username }} hard"
        line: "{{ user_username }} hard nofile 20000"
        backup: true
      become: true

    - name: Nest soft ulimit nofile
      ansible.builtin.lineinfile:
        path: /etc/security/limits.conf
        state: present
        regexp: "{{ user_username }} soft"
        line: "{{ user_username }} soft nofile 20000"
        backup: true
      become: true
  when:
    - ansible_system == 'Linux'

- name: Nest ulimit nofile
  ansible.builtin.lineinfile:
    path: /etc/security/limits
    state: present
    regexp: 'nofiles = 2000'
    line: 'nofiles = 20000'
    backup: true
  become: true
  when:
    - ansible_architecture == 'chrp'

- name: Opt directory owner
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    recurse: false
    owner: "{{ user_username }}"
    group: "{{ user_username }}"
    mode: '0755'
  with_items:
    - '/opt'
  become: true

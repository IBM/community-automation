---
- name: Check if liberty is installed
  ansible.builtin.stat:
    path: "{{ install_base }}/{{ liberty_dir }}/bin/server"
  register: isliberty
  failed_when: isliberty.stat.exists == False

- name: Check server status
  ansible.builtin.command:
    cmd: "{{ wlp_cmd }} {{ install_base }}/{{ liberty_dir }}/bin/server status {{ wl_server }}"
  register: cmdOutput1
  failed_when: ( cmdOutput1.rc not in [ 0, 1, 2 ] )

- name: Server status output
  ansible.builtin.debug:
    msg: '{{ cmdOutput1.stdout | trim }}'

- name: Set status facts
  ansible.builtin.set_fact:
    server_status: '{{ cmdOutput1.stdout | trim }}'

- name: Create status dir
  delegate_to: localhost
  ansible.builtin.file:
    path: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}"
    state: directory
    mode: '0755'

- name: Save server status json files
  when: 
    - logs_dir is defined
    - env_name is defined
    - status_json_file is defined
  block:
    - name: Write Liberty status to json file
      delegate_to: localhost
      ansible.builtin.template:
        src: server_status.json.j2
        dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/{{ status_json_file }}.json"
        mode: '0444'

    - name: Check if envs combined server status json exists
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ logs_dir }}/{{ env_name }}/{{ status_json_file }}.json"
      register: isserver

    - name: Write Liberty status to the combined json file ( seed server )
      when: not isserver.stat.exists
      delegate_to: localhost
      ansible.builtin.template:
        src: server_status.json.j2
        dest: "{{ logs_dir }}/{{ env_name }}/{{ status_json_file }}.json"
        mode: '0444'

    - name: Write Liberty status to the combined json file ( combined servers )
      when: isserver.stat.exists
      block:
        - name: Read the contents previous server status
          delegate_to: localhost
          ansible.builtin.set_fact:
            combined_status: "{{ lookup('ansible.builtin.file', '{{ logs_dir }}/{{ env_name }}/{{ status_json_file }}.json') | from_json }}"

        - name: Read the current server status json
          delegate_to: localhost
          ansible.builtin.set_fact:
            current_status: "{{ lookup('ansible.builtin.file', '{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/servers/{{ wl_server }}/{{ status_json_file }}.json') | from_json }}"

        - name: Save servers status ( combined )
          delegate_to: localhost
          ansible.builtin.copy:
            content: "{{ current_status | ansible.builtin.combine(combined_status) }}"
            dest: "{{ logs_dir }}/{{ env_name }}/{{ status_json_file }}.json"
            mode: '0444'

---
- name: Print DB info
  when: groups.db is defined
  block:
    # if the db container is not running this will not work
    # our container already exports this to a file on the mounted volume
    # dbdir/backup/db2ls.info
    #
    # - name: Get the DB container version info
    #   containers.podman.podman_container_exec:
    #     name: "{{ svt_db_container_name }}"
    #     command: "su - db2inst1 -c db2ls -c"
    #   register: dbinfo

    # the db2ls.info file is new, and prob not on all the target dbs yet
    - name: Check if dbdir/backup/db2ls.info exists
      stat:
        path: dbdir/backup/db2ls.info
      register: isdb2ls

    - name: Block for db2ls.info
      when: isdb2ls.stat.exists
      block:
        - name: Fetch the dbdir/backup/db2ls.info
          fetch:
            src: ~/dbdir/backup/db2ls.info
            dest: "{{ logs_dir }}/{{ env_name }}/db2ls.info"
            flat: yes

        # #PATH:VRMF:FIXPACK:SPECIAL:INSTALLTIME:INSTALLERUID 
        # /opt/ibm/db2/V12.1:12.1.1.0:0 ::Tue Feb  4 22:54:29 2025 UTC :0 

        # replace this clunky with some cool regex
        - name: Get the version from the file ( need to regex it )
          shell: "grep -v '#' {{ logs_dir }}/{{ env_name }}/db2ls.info | awk -F ':' '{print $2}'"
          register: db_version_output

        - name: Get the fixpack from the file ( need to regex it )
          shell: "grep -v '#' {{ logs_dir }}/{{ env_name }}/db2ls.info | awk -F ':' '{print $3}'"
          register: db_fixpack_output

        - name: Debug version / fixpack output
          debug: 
            msg: 
              - "{{ db_version_output }}"
              - "{{ db_fixpack_output }}"

        - name: Set the DB version / fixpack facts
          ansible.builtin.set_fact:
            db_Version: "{{ db_version_output.stdout }}" # ?? some tricky regex
            db_Fixpack: "{{ db_fixpack_output.stdout }}" # ?? some tricky regex

    - name: Default the db version db2ls file not found
      when: not isdb2ls.stat.exists
      ansible.builtin.set_fact:
        db_Version: "V12.1.1.0"
        db_Fixpack: "0"

    - name: Create local logs dir
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ logs_dir }}/{{ env_name }}"
        state: directory
        mode: '0755'

    - name: Save dbinfo to db_info.json
      delegate_to: localhost
      ansible.builtin.template:
        src: db_info.json.j2
        dest: "{{ logs_dir }}/{{ env_name }}/db_info.json"
        mode: '0444'

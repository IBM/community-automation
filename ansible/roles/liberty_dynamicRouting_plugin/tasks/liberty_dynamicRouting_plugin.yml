---
- name: dynamicRouting_plugin
  when: controller_role == 'primary'
  tags: dynamicRouting 
  block:
  - name: check if ihs is installed
    stat:
      path: "{{ install_ihs_base }}/{{ http_dir }}/bin"
    register: ishttp
    failed_when: ishttp.stat.exists == False

  - name: copy generated files
    copy:
      src: "{{ item }}"
      dest: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/{{ item }}"
    with_items:
    - plugin-cfg.xml
    - plugin-key.p12

  - name: Remove any previous plugin-key* files
    file:
      path: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/{{ item }}"
      state: absent
    with_items:
      - plugin-key.kdb
      - plugin-key.rdb
      - plugin-key.crl
      - plugin-key.sth

    # some values defaults from
    # im_install_http_plugin/templates/wct_definition.xml.j2
    # im_install_http_plugin/defaults/main.yml
    # liberty_dynamicRouting/defaults/main.yml
  - name: gskcapicmd convert
    failed_when: false
    shell: "{{ install_ihs_base }}/{{ http_dir }}/bin/gskcapicmd{{ ext }} -keydb -convert -pw {{ liberty_admin_pass }} -db plugin-key.p12 -old_format pkcs12 -target plugin-key.kdb -new_format cms -stash"
    args:
      chdir: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}"
    register: gskcapicmdOutput

  - name: gskcapicmdOutput
    debug: 
     msg: "{{ gskcapicmdOutput.stdout_lines }}"

  - name: gskcapicmd setdefault cert aliase
    failed_when: false
    shell: "{{ install_ihs_base }}/{{ http_dir }}/bin/gskcapicmd{{ ext }} -cert -setdefault -pw {{ liberty_admin_pass }} -db plugin-key.kdb -label default"
    args:
      chdir: "{{install_ihs_base }}/{{ plugin_dir }}/config/webserver1"
    register: gskcapicmdcertOutput

  - name: gskcapicmd
    debug: 
     msg: "{{ gskcapicmdcertOutput.stdout_lines }}"

  - name: Windoze HTTPServer restart
    when: ansible_system == 'Windows' or 'CYG' in ansible_system
    block:
      # adjust the windoze paths due to some cygwin failures
      # <Log LogLevel="Error" Name="c:/temp/logs/http_plugin.log"/>
      # <Property name="keyring" value="c:/temp/keys/plugin-key.kdb"/>
      # for some reason having logs in c:/cygwin64/nest/HTTPServer/logs does not work, I think too many symlink levels
      - name: Windoze create c:/temp/logs
        ansible.builtin.file:
          path: "c:/temp/logs"
          state: directory
      - name: Windoze create c:/temp/keys
        ansible.builtin.file:
          path: "c:/temp/keys"
          state: directory
      - name: Switch the windoze path to the http_plugin.log
        ansible.builtin.replace:
          path: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/plugin-cfg.xml"
          regexp: '{{ install_ihs_base }}/{{ plugin_dir }}/logs/{{ webServerName }}'
          replace: 'c:/temp/logs'
      - name: Switch the windoze path to the plugin-key* keyring files
        ansible.builtin.replace:
          path: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/plugin-cfg.xml"
          regexp: '{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}'
          replace: 'c:/temp/keys'
      - name: Copy the modified windoze file to c:/temp/keys
        ansible.builtin.copy:
          src: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/{{ item }}"
          dest: 'c:/temp/keys/{{ item }}'
          remote_src: true
        with_items:
          - plugin-key.kdb
          - plugin-key.rdb
          - plugin-key.crl
          - plugin-key.sth
      - name: Remove any previous plugin-key* files ( windoze )
        ansible.builtin.file:
          path: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/{{ item }}"
          state: absent
        with_items:
          - plugin-key.kdb
          - plugin-key.rdb
          - plugin-key.crl
          - plugin-key.sth
      - name: Add windoze text file with info about where the plugin-key files are
        ansible.builtin.copy:
          content: 'all plugin-key* files are in c:/temp/keys/'
          dest: "{{ install_ihs_base }}/{{ plugin_dir }}/config/{{ webServerName }}/where_are_plugin_key_files.txt"
      - name: Apache stop
        ansible.builtin.shell: "{{install_ihs_base }}/{{ http_dir }}/bin/apache -k stop -n 'IBMHTTPServer'"
      - name: Apache start
        ansible.builtin.shell: "{{install_ihs_base }}/{{ http_dir }}/bin/apache -k start -n 'IBMHTTPServer'"

  - name: HTTPServer graceful load new routing ( *nix )
    when: ansible_system is not search('CYG')
    failed_when: false
    shell: "{{ install_ihs_base }}/{{ http_dir }}/bin/apachectl graceful"


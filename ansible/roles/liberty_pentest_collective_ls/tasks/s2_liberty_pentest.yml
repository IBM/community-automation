---
- name: Configure s2 PenTest 
  tags: configure_s2_pentest 
  block:
  - name: check if liberty is installed
    stat:
      path: "{{ install_base }}/{{ liberty_dir }}/bin/server"
    register: isliberty
    failed_when: isliberty.stat.exists == False

  - name: copy server2 server.xml template
    template:
     src: "{{ wl_server }}.xml.j2"  
     dest: "{{ wlp_usr_dir }}/servers/{{ wl_server }}/server.xml"
  
  - name: add server.env cert_defaultKeyStore
    lineinfile:
      path: "{{ wlp_usr_dir }}/servers/{{ wl_server }}/server.env"
      regexp: 'cert_defaultKeyStore'
      line: 'cert_defaultKeyStore={{ wlp_usr_dir }}/shared/config/server2.der'

  - name: add server.env HOST_ALIAS
    lineinfile:
      path: "{{ wlp_usr_dir }}/servers/{{ wl_server }}/server.env"
      regexp: 'HOST_ALIAS'
      line: 'HOST_ALIAS={{ ansible_fqdn }}'

  - name: autoAcceptCertificates
    lineinfile:
      path: "{{ wlp_usr_dir }}/servers/{{ wl_server }}/server.env"
      regexp: 'autoAcceptCertificates'
      line: 'JVM_ARGS=-Dcom.ibm.websphere.collective.utility.autoAcceptCertificates=true'

  - name: Stop Liberty Server 
    command:
      cmd: "{{ wlp_cmd }} {{install_base }}/{{ liberty_dir }}/bin/server stop {{ wl_server }}"
    register: cmdOutput
    failed_when: ( cmdOutput.rc not in [ 0, 1 ] )

  - debug:
     msg: '{{ cmdOutput.stdout_lines }}'

  - name: Start Liberty Server
    command:
      cmd: "{{ wlp_nohup }} {{ wlp_cmd }} {{install_base }}/{{ liberty_dir }}/bin/server start {{ wl_server }} --clean"
    register: cmdOutput
    failed_when: ( cmdOutput.rc not in [ 0, 1 ] )

  - debug:
     msg: '{{ cmdOutput.stdout_lines }}'

  - name: check server status
    command:
      cmd: "{{ wlp_cmd }} {{install_base }}/{{ liberty_dir }}/bin/server status {{ wl_server }}"
    register: cmdOutput
    failed_when: ( cmdOutput.rc not in [ 0, 1 ] )

  - debug:
     msg: '{{ cmdOutput.stdout_lines }}'
      

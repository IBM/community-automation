---

- name: copy NEST common jmeter artifacts
  copy:
   src: "scripts/"
   dest: "/home/{{ jmeterUser }}/"
   mode: '0755'

- name: check if jmeter dir
  file:
   path: "{{ jmeterDir }}"
   state: directory
   owner: "{{ jmeterUser }}"

- name: find jmeter exec
  shell: "find {{ jmeterDir }} -type f -name jmeter"
  register: jmeterexec

- name: check if jmeter
  stat:
   path: "{{ jmeterexec.stdout }}"
  register: isjmeter

- block:
  - name: retrieve Jmeter
    get_url:
     url: "{{ jmeterArchive }}"
     dest: /tmp/jmeter.tgz

  - name: install Jmeter
    unarchive:
     src: /tmp/jmeter.tgz
     dest: "{{ jmeterDir }}"
     owner: "{{ jmeterUser }}"
     remote_src: yes

  - name: remove temp java archive
    file:
     path: /tmp/jmeter.tgz
     state: absent

  - name: get version
    shell: "ls {{ jmeterDir }}"
    register: jVersion

  - name: jmeter in system path
    lineinfile:
     create: yes
     path: "/etc/profile.d/jmeter.sh"
     state: present
     regexp: 'jmeter'
     line: 'export PATH="$PATH:{{ jmeterDir }}/{{ jVersion.stdout }}/bin"'
     backup: yes
     mode: '0644'
    become: yes

  - name: retrieve jmeter-plugin-manager.jar
    get_url:
     url: "{{ jmeterManagerPluginUrl }}"
     dest: "{{ jmeterDir }}/{{ jVersion.stdout }}/lib/ext/jmeter-plugin-manager.jar"
  when: isjmeter.stat.exists == False

---

- name: tWAS Versions
  tags: tWAS version 
  block:
  
  - name:  listInstalledPackages
    shell: "{{ install_base }}/IM/eclipse/tools/imcl listInstalledPackages -long"
    register: packageOutput
  
  - name: packageOutput
    debug: 
      msg: "{{ packageOutput.stdout_lines }}"

  - name: Create version dir
    delegate_to: localhost
    file:
      path: "{{ logsDir }}/{{ env_name }}/{{ ansible_fqdn }}"
      state: directory

  - name: Write IM listInstalledPackages to file
    delegate_to: localhost
    ansible.builtin.copy:
      content: "{{ packageOutput.stdout_lines }}"
      dest: "{{ logsDir }}/{{ env_name }}/{{ ansible_fqdn }}/{{ version_txt_file }}"
    when: 
      - logsDir is defined
      - env_name is defined
      - version_txt_file is defined

  - name: check if tWAS installed
    stat:
      path: "{{ install_base }}/{{ twas_dir }}/bin/versionInfo.sh -ifixDetail"
    register: istwas

  - name: tWAS versions
    block:
    - name: tWAS version
      shell: "{{install_base }}/{{ twas_dir }}/bin/versionInfo.sh -ifixDetail"
      register: twasVersionOutput

    - name: twasVersionOutput
      debug: 
        msg: "{{ twasVersionOutput.stdout_lines }}"
    when: istwas.stat.exists == True

  - name: check if AppClient installed
    stat:
      path: "{{ install_base }}/{{ app_dir }}/bin/versionInfo.sh -ifixDetail"
    register: isapp

  - name: AppClient versions
    block:
    - name: AppClient version
      shell: "{{ install_base }}/{{ app_dir }}/bin/versionInfo.sh -ifixDetail"
      register: appVersionOutput
    - name: tWAS Application Client versionsInfo output
      debug:
        msg: "{{ appVersionOutput.stdout_lines }}"
    when: isapp.stat.exists == True

---
- name:  listInstalledPackages
  ansible.builtin.shell: "{{ install_base }}/IM/eclipse/tools/imcl listInstalledPackages -long"
  register: packageOutput

- name: packageOutput
  ansible.builtin.debug: 
    msg: "{{ packageOutput.stdout_lines }}"

- name: Create version dir
  delegate_to: localhost
  ansible.builtin.file:
    path: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}"
    state: directory
    mode: '0755'

- name: Write IM listInstalledPackages to txt file
  delegate_to: localhost
  ansible.builtin.copy:
    content: "{{ packageOutput.stdout }}"
    dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/{{ version_txt_file }}"
    mode: '0755'
  when: 
    - logs_dir is defined
    - env_name is defined
    - version_txt_file is defined

- name: Write IM listInstalledPackages to json file
  delegate_to: localhost
  ansible.builtin.copy:
    content: "{{ packageOutput.stdout_lines | to_json(indent=4) }}"
    dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/{{ version_json_file }}"
    mode: '0755'
  when: 
    - logs_dir is defined
    - env_name is defined
    - version_json_file is defined

- name: check if tWAS installed
  ansible.builtin.stat:
    path: "{{ install_base }}/{{ twas_dir }}/bin/versionInfo{{ ext }} -ifixDetail"
  register: istwas

- name: tWAS versions
  block:
  - name: tWAS version
    ansible.builtin.shell: "{{install_base }}/{{ twas_dir }}/bin/versionInfo{{ ext }} -ifixDetail"
    register: twasVersionOutput

  - name: twasVersionOutput
    ansible.builtin.debug: 
      msg: "{{ twasVersionOutput.stdout_lines }}"

  - name: Write tWAS versionInfo to json file
    delegate_to: localhost
    ansible.builtin.copy:
      content: "{{ twasVersionOutput.stdout_lines | to_json(indent=4) }}"
      dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/twas_{{ versioninfo_json_file }}"
      mode: '0755'
    when: 
      - logs_dir is defined
      - env_name is defined
      - versioninfo_json_file is defined
  when: istwas.stat.exists

- name: check if AppClient installed
  ansible.builtin.stat:
    path: "{{ install_base }}/{{ app_dir }}/bin/versionInfo{{ ext }} -ifixDetail"
  register: isapp

- name: AppClient versions
  block:
  - name: AppClient version
    ansible.builtin.shell: "{{ install_base }}/{{ app_dir }}/bin/versionInfo{{ ext }} -ifixDetail"
    register: appVersionOutput
  - name: tWAS Application Client versionsInfo output
    ansible.builtin.debug:
      msg: "{{ appVersionOutput.stdout_lines }}"
  - name: Write AppClient versionInfo to json file
    delegate_to: localhost
    ansible.builtin.copy:
      content: "{{ appVersionOutput.stdout_lines | to_json(indent=4) }}"
      dest: "{{ logs_dir }}/{{ env_name }}/{{ ansible_fqdn }}/appclient_{{ versioninfo_json_file }}"
      mode: '0755'
    when: 
      - logs_dir is defined
      - env_name is defined
      - versioninfo_json_file is defined
  when: isapp.stat.exists

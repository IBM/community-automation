---
# tasks file for ocp4 common services installation

- name: Retrieve default StorageClass
  shell: |
    oc get storageclass | grep "(default)" | awk '{print $1}'
  register: default_sc

- name: Reset default StorageClass
  when: default_sc.stdout|length|int > 0 and storageclass_name != ""
  shell: |
    oc patch storageclass {{ default_sc.stdout }} -p '{"metadata": {"annotations": {"storageclass.kubernetes.io/is-default-class": "false"}}}'

- name: Making user specified StorageClass as default
  when: storageclass_name != ""
  shell: |
    oc patch storageclass {{ storageclass_name }} -p '{"metadata": {"annotations": {"storageclass.kubernetes.io/is-default-class": "true"}}}'

- name: Apply the CRDs
  shell: |
    oc apply -f catalog-source.yaml
    oc new-project {{ cs_operator_project_name }}
    sleep 5
    oc -n {{ cs_operator_project_name }} apply -f cs-group.yaml
    oc -n {{ cs_operator_project_name }} apply -f cs-sub.yaml
  args:
    chdir: "{{ cs_setup_dir }}"

# The Operand Deployment Lifecycle Manager is not always available immediately
- name: Waiting for Operand Deployment Lifecycle Manager to complete
  shell: "oc get csv -A --no-headers | grep operand-deployment-lifecycle-manager | grep Succeeded | wc -l"
  register: operand_count
  until: operand_count.stdout|int != 0
  retries: 20
  delay: 30

- name: Making sure CRD OperandRegistry is present
  shell: "oc get operandregistry -A --no-headers | grep common-service | wc -l"
  register: crdc_count
  until: crdc_count.stdout|int == 1
  retries: 10
  delay: 30

- name: Query available operands
  shell: oc -n ibm-common-services get operandregistry common-service -o jsonpath='{.spec.operators[*].name}'
  register: oc_operands

- name: Display available operands
  debug:
    msg: "{{ oc_operands.stdout.split() }}"

- name: Generate OperandRequest
  shell: |
    bash cs-request.bash; cat operandrequest.yml
  register: deploy_operands
  args:
    chdir: "{{ cs_setup_dir }}"

- name: Display generated OperandRequest
  debug:
    msg: "{{ deploy_operands.stdout_lines }}"

- name: Deploy generated OperandRequest
  shell: |
    oc project ibm-common-services
    oc -n ibm-common-services apply -f operandrequest.yml
  args:
    chdir: "{{ cs_setup_dir }}"

- name: Waiting for ClusterServiceVersion to initialize
  shell: |
    sleep 30
    oc -n ibm-common-services get csv --no-headers | grep -v operand-deployment-lifecycle-manager | wc -l
  register: csvi_count
  until: csvi_count.stdout|int >= 1
  retries: 15
  delay: 30

- name: Waiting for all ClusterServiceVersion to complete
  shell: "sleep 30; oc -n ibm-common-services get csv --no-headers | grep -v Succeeded | wc -l"
  register: csvc_count
  until: csvc_count.stdout|int == 0
  retries: 45
  delay: 30

- name: Make sure Mongodb is present
  shell: "sleep 30; oc -n ibm-common-services get statefulset --no-headers | grep -i mongodb | wc -l"
  register: mongo_count
  until: mongo_count.stdout|int != 0
  retries: 10
  delay: 30

- name: Make sure all Statefulsets are healthy
  shell: "sleep 30; oc -n ibm-common-services get statefulset --no-headers | egrep \"0/1|0/2|1/2|0/3|1/3|2/3\" | wc -l"
  register: statefulset_unhealthy
  until: statefulset_unhealthy.stdout|int == 0
  retries: 30
  delay: 30

- name: Make sure all jobs are completed
  shell: "sleep 30; oc -n ibm-common-services get job --no-headers | egrep \"0/1|0/2|1/2|0/3|1/3|2/3\" | wc -l"
  register: job_notcompleted
  until: job_notcompleted.stdout|int == 0
  retries: 15
  delay: 30

- name: Validation with statefulsets and jobs
  shell: "bash cs-validation.bash"
  args:
    chdir: "{{ cs_setup_dir }}"

- name: Query console admin password
  shell: |
    oc -n ibm-common-services get route cp-console -o jsonpath='{.spec.host}'; echo
    oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 -d
  register: cs_admin_password

- name: Display console admin password
  debug:
    msg: "Console route is: {{ cs_admin_password.stdout_lines[0] }}    Console admin password is: {{ cs_admin_password.stdout_lines[1] }}"
